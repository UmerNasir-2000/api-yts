generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cinematic {
  id                 String          @id @default(uuid())
  referenceId        Int             @unique @map("reference_id")
  title              String
  tagline            String
  budget             String
  revenue            String
  imdb               String
  youtubeTrailerCode String?         @map("yt_trailer_code")
  slug               String          @unique
  releasedYear       Int             @map("released_year")
  runtime            Int
  description        String          @db.Text
  poster             String          @db.Text
  background         String          @db.Text
  posterHash         String          @map("poster_hash") @db.Text
  language           String
  pictures           Json            @db.Json
  genres             Json            @db.Json
  director           Json            @db.Json
  keywords           Json            @db.Json
  type               CinematicType   @default(MOVIE)
  status             CinematicStatus @default(RELEASED)
  createdAt          DateTime        @default(now()) @map("created_at")
  updatedAt          DateTime        @updatedAt @map("updated_at")
  torrents           Torrent[]
  Cast               Cast[]

  @@map("cinematics")
}

model Torrent {
  id            String  @id @default(uuid())
  url           String
  hash          String
  quality       String
  type          String
  isRepack      Boolean @map("is_repack")
  videoCodec    String  @map("video_codec")
  bitDepth      Int     @map("bit_depth")
  audioChannels String  @map("audio_channels")
  seeds         Int
  peers         Int
  size          String

  cinematicId String    @map("movie_id")
  cinematic   Cinematic @relation(fields: [cinematicId], references: [id])

  @@map("torrents")
}

model Actor {
  id                 String  @id @default(uuid())
  imdb               String
  name               String
  profilePhoto       String? @map("profile_photo") @db.Text
  birthDate          String? @map("birth_date")
  images             Json?   @db.Json
  bio                String  @db.Text()
  popular_cinematics Json?   @map("popular_cinematics") @db.Json
  Cast               Cast[]

  @@map("actors")
}

model Cast {
  id             String    @id @default(uuid())
  characterNames Json      @map("character_names") @db.Json
  cinematicId    String    @map("cinematic_id")
  cinematic      Cinematic @relation(fields: [cinematicId], references: [id])
  actorId        String    @map("actor_id")
  actor          Actor     @relation(fields: [actorId], references: [id])

  @@map("cinematic_cast")
}

enum CinematicType {
  MOVIE
  TV_SHOW
}

enum CinematicStatus {
  RELEASED
  UPCOMING
  CANCELLED
}
